<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<%= simple_form_for :search,  url: tweets_path , :method => :get, :remote => false, :validate=>true,  :html => {  :class => 'form form-vertical validate-form', :style => 'margin-bottom: 0;'} do |f| %>
    <div class="row">
      <div class="clearfix">
        <div class='col-sm-3'>
          <div class='box'>
            <div class='lead'>
              <i class='icon-map-marker contrast'></i>
              Latitude
            </div>
            <% unless params[:search].nil? or  params[:search][:latitude].nil?%>
                <%= f.input :latitude,  placeholder: 'Latitude', input_html: {value: params[:search][:latitude], class: 'form-control', :'data-rule-required' => true, required: true}, label: false, as: :float %>
            <%else %>
                <%= f.input :latitude,  placeholder: 'Latitude', input_html: {class: 'form-control', :'data-rule-required' => true, required: true}, label: false, as: :float %>
            <% end %>
          </div>
        </div>
        <div class='col-sm-3'>
          <div class='box'>
            <div class='lead'>
              <i class='icon-map-marker contrast'></i>
              Longitude
            </div>
            <% unless params[:search].nil? or  params[:search][:longitude].nil?%>
                <%= f.input :longitude, placeholder: 'Longitude', input_html: { value: params[:search][:longitude],class: 'form-control', :'data-rule-required' => true}, label: false, as: :float %>
            <%else %>
                <%= f.input :longitude, placeholder: 'Longitude', input_html: {class: 'form-control', :'data-rule-required' => true}, label: false, as: :float %>
            <% end %>

          </div>
        </div>
        <div class='col-sm-3'>
          <div class='box'>
            <div class='lead'>
              <i class='icon-map-marker contrast'></i>
              Radius (in km)
            </div>
            <% unless params[:search].nil? or  params[:search][:radius].nil?%>
                <%= f.input :radius,  placeholder: 'Radius in Miles', input_html: { value: params[:search][:radius], class: 'form-control',min:1, step: 1, type: 'number', :'data-rule-required' => true}, label: false%>
            <%else %>
                <%= f.input :radius,  placeholder: 'Radius in Miles', input_html: {class: 'form-control',min:1, step: 1, type: 'number', :'data-rule-required' => true}, label: false%>
            <% end %>

          </div>
        </div>
      </div>
      <div class="clearfix">
        <div class='col-sm-7'>
          <div class='box'>
            <div class='lead'>
              <i class='icon-map-marker contrast'></i>
              Hashtags
            </div>
            <% unless params[:search].nil? or  params[:search][:hashtags].nil?%>
                <%= f.input :hashtags,  placeholder: 'Hashtags (comma delimited)', input_html: { value: params[:search][:hashtags], class: 'form-control'}, label: false,  as: :text %>
            <%else %>
                <%= f.input :hashtags,  placeholder: 'Hashtags (comma delimited)', input_html: {class: 'form-control'}, label: false,  as: :text %>
            <% end %>

          </div>
        </div>
      </div>
    </div>
    <%= f.submit 'Search', input_html: {value: 'no_maps', class: 'btn btn-danger btn-block btn-lg'}%>
<% end %>


<% unless @tweets.nil? or @tweets.empty? %>
    <br><br>
    <b><p>Tweets from matching the search criteria</p></b>
    <table class="table table-hover table-bordered">
    <tr><th>Tweet</th>
    <th>Created At</th></tr>
    <% @tweets.each do |tweet|%>
     <tr><td><%= tweet[:tweet] %></td>
      <td><%= tweet[:time] %></td></tr>
    <% end %>
    </table>

    <div style='width: 800px;'>
      <div id="map" style='width: 800px; height: 400px;'></div>
    </div>

    <script type="application/javascript">
        handler = Gmaps.build('Google');
        handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
            markers = handler.addMarkers(<%=raw @hash.to_json %>);
            handler.bounds.extendWith(markers);
            handler.fitMapToBounds();

        });
    </script>
<% end %>


